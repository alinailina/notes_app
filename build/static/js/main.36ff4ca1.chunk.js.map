{"version":3,"sources":["components/Note.jsx","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","content","important","label","className","onClick","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","type","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","returnedNote","concat","value","onChange","target","map","key","find","changedNote","toggleImportanceOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAoBeA,EAlBF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAuBF,EAAvBE,QAASC,EAAcH,EAAdG,UACXC,EAAQD,EAAY,YAAc,gBACxC,OACE,4BACE,4BAAKD,GACL,4BACE,4BACEG,UAAWF,EAAY,iBAAmB,KAC1CG,QAASL,GAERG,M,gBCQI,EAfA,WAEb,OADgBG,IAAMC,IAHR,cAICC,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SC2D9BK,EAzEH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKhBC,qBAAU,WACRC,IAAqBhB,MAAK,SAACiB,GACzBP,EAASO,QAEV,IAEH,IAkBMC,EAAcL,EAChBJ,EACAA,EAAMU,QAAO,SAAC5B,GAAD,OAA6B,IAAnBA,EAAKG,aAWhC,OACE,6BACE,qCACA,2BAAOG,QAAS,kBAAMiB,GAAYD,IAAUO,KAAK,aACjD,gDACA,wCACA,0BAAMC,SAjCM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CACjB/B,QAASkB,EACTc,MAAM,IAAIC,MAAOC,cACjBjC,UAAWkC,KAAKC,SAAW,IAG7Bb,EAAmBQ,GAAYxB,MAAK,SAAC8B,GACnCpB,EAASD,EAAMsB,OAAOD,IACtBlB,EAAW,SAwBT,2BAAOQ,KAAK,OAAOY,MAAOrB,EAASsB,SAtChB,SAACX,GACxBV,EAAWU,EAAEY,OAAOF,UAsChB,4BAAQZ,KAAK,UAAb,aAEF,+BACE,+BACE,4BACE,oCACA,+BAGJ,+BACGF,EAAYiB,KAAI,SAAC5C,GAAD,OACf,kBAAC,EAAD,CACE6C,IAAK7C,EAAKc,GACVd,KAAMA,EACNC,iBAAkB,kBA/BH,SAACa,GAC1B,IAAMd,EAAOkB,EAAM4B,MAAK,SAAC9C,GAAD,OAAUA,EAAKc,KAAOA,KACxCiC,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDsB,EAAmBX,EAAIiC,GAAatC,MAAK,SAAC8B,GACxCpB,EAASD,EAAM0B,KAAI,SAAC5C,GAAD,OAAWA,EAAKc,KAAOA,EAAKd,EAAOuC,SA0BtBS,CAAmBhD,EAAKc,cC/D9DmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.36ff4ca1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const { content, important } = note;\n  const label = important ? \"Important\" : \"Not important\";\n  return (\n    <tr>\n      <td>{content}</td>\n      <td>\n        <button\n          className={important ? \"button-primary\" : null}\n          onClick={toggleImportance}\n        >\n          {label}\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\n// const baseUrl = \"http://localhost:3001/notes\";\n// const baseUrl = \"http://localhost:3001/api/notes\";\n// const baseUrl = \"https://hello-from-notes.herokuapp.com/api/notes\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((note) => note.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService.update(id, changedNote).then((returnedNote) => {\n      setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n    });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <input onClick={() => setShowAll(!showAll)} type=\"checkbox\" />\n      <span>Only important</span>\n      <h2>Add note</h2>\n      <form onSubmit={addNote}>\n        <input type=\"text\" value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">Add note</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Note</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {notesToShow.map((note) => (\n            <Note\n              key={note.id}\n              note={note}\n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}